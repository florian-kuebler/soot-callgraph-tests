Class;Caller;Callee;Declared;Called
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnAlternateBase()>;<callgraph.base.SimpleBase: java.lang.String toString()>;NO;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnAlternateBase()>;<java.lang.Object: java.lang.String toString()>;YES;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnConcreteBase()>;<java.lang.Object: java.lang.String toString()>;YES;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnConcreteBase()>;<callgraph.base.SimpleBase: java.lang.String toString()>;NO;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnAbstractBase()>;<java.lang.Object: java.lang.String toString()>;YES;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnAbstractBase()>;<callgraph.base.SimpleBase: java.lang.String toString()>;NO;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnSimpleBase()>;<java.lang.Object: java.lang.String toString()>;NO;YES
callgraph.virtualCalls.CallToStringOnInterface;<callgraph.virtualCalls.CallToStringOnInterface: void callToStringOnSimpleBase()>;<callgraph.base.SimpleBase: java.lang.String toString()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractMethod()>;<callgraph.base.AlternateBase: void abstractMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractMethod()>;<callgraph.base.SimpleBase: void abstractMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractMethod()>;<callgraph.base.ConcreteBase: void abstractMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.ConcreteBase: void implementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callImplementedMethod()>;<callgraph.base.AbstractBase: void implementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callInterfaceMethod()>;<callgraph.base.SimpleBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callInterfaceMethod()>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callInterfaceMethod()>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callInterfaceMethod()>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractImplementedMethod()>;<callgraph.base.AbstractBase: void abstractImplementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractImplementedMethod()>;<callgraph.base.AbstractBase: void abstractImplementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractImplementedMethod()>;<callgraph.base.SimpleBase: void abstractImplementedMethod()>;YES;YES
callgraph.virtualCalls.CallConcreteObjects;<callgraph.virtualCalls.CallConcreteObjects: void callAbstractImplementedMethod()>;<callgraph.base.AbstractBase: void abstractImplementedMethod()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void callOnMethodParameter(simpleCallgraph.Base)>;<simpleCallgraph.B: void callOnConstructor()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void callOnMethodParameter(simpleCallgraph.Base)>;<simpleCallgraph.A: void callOnMethodParameter(simpleCallgraph.Base)>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void callOnMethodParameter(simpleCallgraph.Base)>;<simpleCallgraph.A: void callOnConstructor()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void directCallOnConstructor()>;<simpleCallgraph.B: void callOnConstructor()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void directCallOnConstructor()>;<simpleCallgraph.A: void callOnConstructor()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: void callOnConstructor()>;<simpleCallgraph.B: void callOnConstructor()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: java.lang.String callOnInstanceField()>;<simpleCallgraph.B: java.lang.String callOnInstanceField()>;YES;YES
simpleCallgraph.A;<simpleCallgraph.A: java.lang.String callOnInstanceField()>;<simpleCallgraph.A: java.lang.String callOnInstanceField()>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<methodhandles.SameClass: java.lang.Object objectReturn(java.lang.Object)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<methodhandles.SameClass: java.lang.Void object(java.lang.Object)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<methodhandles.SameClass: java.lang.Void primitive(int)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<methodhandles.SameClass: int primitiveReturn(int)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<methodhandles.SameClass: [I arrayReturn([I)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<methodhandles.SameClass: java.lang.Void array([I)>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsProtected()>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsPublic()>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsPrivate()>;YES;NO
methodhandles.SameClass;<methodhandles.SameClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.SimpleBase)>;<callgraph.base.SimpleBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.Base)>;<callgraph.base.SimpleBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.Base)>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.AlternateBase)>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.AbstractBase)>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.virtualCalls.CallByParameter;<callgraph.virtualCalls.CallByParameter: void callByInterface(callgraph.base.ConcreteBase)>;<callgraph.base.AbstractBase: void interfaceMethod()>;YES;YES
callgraph.base.AlternateBase;<callgraph.base.AlternateBase: void abstractMethod()>;<callgraph.base.AbstractBase: void abstractImplementedMethod()>;YES;YES
callgraph.base.AlternateBase;<callgraph.base.AlternateBase: void implementedMethod()>;<callgraph.base.AbstractBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void canThrowNullPointerException(java.lang.Object)>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerExceptionCatchOtherExceptions(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodInCatchWithDoWhile()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AlternateBase: java.lang.Void staticMethod()>;YES;NO
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.misc.TryCatchFinally: java.lang.Throwable createThrowable()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableType()>;<callgraph.base.AbstractBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callStaticMethodInFinally()>;<callgraph.base.SimpleBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callStaticMethodInFinally()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callVirtualMethodInCatch()>;<callgraph.base.SimpleBase: java.lang.Void implementedMethod()>;YES;NO
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.misc.TryCatchFinally: void throwThrowablePartly()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AlternateBase: java.lang.Void staticMethod()>;YES;NO
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AbstractBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMethodBasedOnThrowableTypePartly()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInEmptyForLoop()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callStaticMethodInCatch()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void throwErrorCatchExceptionOrError()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void throwErrorCatchExceptionOrError()>;<callgraph.base.AbstractBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchAfterDoWhileInfiniteLoop()>;<java.lang.Object: java.lang.Class getClass()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchAfterDoWhileInfiniteLoop()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchAfterDoWhileInfiniteLoop()>;<callgraph.base.AbstractBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchWithBreak()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchWithBreak()>;<callgraph.base.SimpleBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchWithBreak()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchWithBreak()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callInCatchWithBreak()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void alwaysThrowsException()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void mayThrowException()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTryAlternateOrder(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callVirtualMethodInFinally()>;<callgraph.base.SimpleBase: java.lang.Void implementedMethod()>;YES;NO
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsException()>;<callgraph.misc.TryCatchFinally: void throwsException()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsException()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void noCallInCatchWithLabeledBreak()>;<callgraph.base.SimpleBase: void staticMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void noCallInCatchWithLabeledBreak()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void noCallInCatchWithLabeledBreak()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void noCallInCatchWithLabeledBreak()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void noCallInCatchWithLabeledBreak()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void canThrowNullPointerException(java.lang.Object)>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void possibleNullPointerException(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsExceptionCatchNoInfiniteLoop()>;<callgraph.misc.TryCatchFinally: void throwsException()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsExceptionCatchNoInfiniteLoop()>;<java.lang.Object: java.lang.String toString()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsExceptionCatchNoInfiniteLoop()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callsMethodThatThrowsExceptionCatchNoInfiniteLoop()>;<java.lang.String: boolean isEmpty()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callThrowCheckedException()>;<callgraph.base.AlternateBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callThrowCheckedException()>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callThrowCheckedException()>;<callgraph.base.SimpleBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callThrowCheckedException()>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callThrowCheckedException()>;<callgraph.misc.TryCatchFinally: void alwaysThrowsCheckedException()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.ConcreteBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.SimpleBase: void implementedMethod()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.AlternateBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.base.AbstractBase: void implementedMethod()>;NO;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void mayThrowException()>;YES;YES
callgraph.misc.TryCatchFinally;<callgraph.misc.TryCatchFinally: void callMultipleMethodsInTry(java.lang.Object)>;<callgraph.misc.TryCatchFinally: void alwaysThrowsException()>;YES;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnAbstractBase()>;<callgraph.base.SimpleBase: int hashCode()>;NO;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnAbstractBase()>;<java.lang.Object: int hashCode()>;YES;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnSimpleBase()>;<java.lang.Object: int hashCode()>;NO;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnSimpleBase()>;<callgraph.base.SimpleBase: int hashCode()>;YES;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnConcreteBase()>;<callgraph.base.SimpleBase: int hashCode()>;NO;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnConcreteBase()>;<java.lang.Object: int hashCode()>;YES;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnAlternateBase()>;<java.lang.Object: int hashCode()>;YES;YES
callgraph.virtualCalls.CallHashcodeOnInterface;<callgraph.virtualCalls.CallHashcodeOnInterface: void callHashCodeOnAlternateBase()>;<callgraph.base.SimpleBase: int hashCode()>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<methodhandles.SameObject: java.lang.Void primitive(int)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<methodhandles.SameObject: int primitiveReturn(int)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsPrivate()>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsPublic()>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsProtected()>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<methodhandles.SameObject: java.lang.Object objectReturn(java.lang.Object)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void objectHandles()>;<methodhandles.SameObject: java.lang.Void object(java.lang.Object)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<methodhandles.SameObject: java.lang.Void array([I)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<methodhandles.SameObject: [I arrayReturn([I)>;YES;NO
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherObject;<methodhandles.OtherObject: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testAnonClass()>;<callgraph.highPrecision.ConcreteClass: java.lang.Void interfaceMethod()>;YES;NO
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testAnonClass()>;<callgraph.highPrecision.ExecutionClass$1: callgraph.highPrecision.IBase interfaceMethod()>;YES;YES
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testAnonClass()>;<callgraph.highPrecision.ExecutionClass$InnerClass: java.lang.Void interfaceMethod()>;YES;NO
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testInnerClass()>;<callgraph.highPrecision.ExecutionClass$1: callgraph.highPrecision.IBase interfaceMethod()>;NO;YES
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testInnerClass()>;<callgraph.highPrecision.ExecutionClass$InnerClass: callgraph.highPrecision.IBase interfaceMethod()>;YES;YES
callgraph.highPrecision.ExecutionClass;<callgraph.highPrecision.ExecutionClass: void testInnerClass()>;<callgraph.highPrecision.ConcreteClass: callgraph.highPrecision.IBase interfaceMethod()>;YES;YES
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<methodhandles.SameObject: java.lang.Void object(java.lang.Object)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<methodhandles.SameObject: java.lang.Object objectReturn(java.lang.Object)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsPublic()>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsProtected()>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<methodhandles.SameObject: java.lang.Void noArgumentsPrivate()>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<methodhandles.SameObject: java.lang.Void primitive(int)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<methodhandles.SameObject: int primitiveReturn(int)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<methodhandles.SameObject: [I arrayReturn([I)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<methodhandles.SameObject: java.lang.Void array([I)>;YES;NO
methodhandles.SameObject;<methodhandles.SameObject: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
callgraph.staticCalls.CallStaticMethods;<callgraph.staticCalls.CallStaticMethods: void callStaticAbstract()>;<callgraph.base.AbstractBase: void staticMethod()>;YES;YES
callgraph.staticCalls.CallStaticMethods;<callgraph.staticCalls.CallStaticMethods: void callStaticConcrete()>;<callgraph.base.ConcreteBase: void staticMethod()>;YES;YES
callgraph.staticCalls.CallStaticMethods;<callgraph.staticCalls.CallStaticMethods: void callStaticSimple()>;<callgraph.base.SimpleBase: void staticMethod()>;YES;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<methodhandles.SameClass: int primitiveReturn(int)>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<methodhandles.SameClass: java.lang.Void primitive(int)>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void primitiveHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<methodhandles.SameClass: java.lang.Void object(java.lang.Object)>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void objectHandles()>;<methodhandles.SameClass: java.lang.Object objectReturn(java.lang.Object)>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsProtected()>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsPublic()>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void noArgumentsMethodHandles()>;<methodhandles.SameClass: java.lang.Void noArgumentsPrivate()>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<methodhandles.SameClass: java.lang.Void array([I)>;YES;NO
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>;NO;YES
methodhandles.OtherClass;<methodhandles.OtherClass: void arrayHandles()>;<methodhandles.SameClass: [I arrayReturn([I)>;YES;NO
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.AltSubclassLevel2: void implementedInEachSubclass()>;NO;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.AltSubclassLevel2: void implementedInEachSubclass()>;NO;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel2: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel1: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel1: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.Superclass: callgraph.opal.algorithms.Superclass getInstance()>;NO;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.Superclass: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel2: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel2: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.Superclass: java.lang.Void implementedInEachSubclass()>;YES;NO
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.Superclass: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.AltSubclassLevel2: void implementedInEachSubclass()>;NO;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void callMethods()>;<callgraph.opal.algorithms.SubclassLevel1: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void testInstanceOfExtVTABranchElimination()>;<callgraph.opal.algorithms.SubclassLevel1: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void testInstanceOfExtVTABranchElimination()>;<callgraph.opal.algorithms.SubclassLevel2: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void testInstanceOfExtVTABranchElimination()>;<callgraph.opal.algorithms.AltSubclassLevel2: void implementedInEachSubclass()>;YES;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void testInstanceOfExtVTABranchElimination()>;<callgraph.opal.algorithms.Superclass: callgraph.opal.algorithms.Superclass getInstance()>;NO;YES
callgraph.opal.algorithms.Superclass;<callgraph.opal.algorithms.Superclass: void testInstanceOfExtVTABranchElimination()>;<callgraph.opal.algorithms.Superclass: java.lang.Void implementedInEachSubclass()>;YES;NO
callgraph.reflections.Reflections;<callgraph.reflections.Reflections: void callAfterCastingToInterface()>;<callgraph.base.ConcreteBase: java.lang.Void implementedMethod()>;YES;NO
callgraph.reflections.Reflections;<callgraph.reflections.Reflections: void callInstantiatedByReflection()>;<callgraph.base.SimpleBase: java.lang.Void implementedMethod()>;YES;NO
callgraph.reflections.Reflections;<callgraph.reflections.Reflections: void callMethodByReflection()>;<callgraph.base.SimpleBase: java.lang.Void implementedMethod()>;YES;NO
simpleCallgraph.B;<simpleCallgraph.B: void callOnMethodParameter(simpleCallgraph.Base)>;<simpleCallgraph.B: void callOnConstructor()>;YES;YES
simpleCallgraph.B;<simpleCallgraph.B: void callOnMethodParameter(simpleCallgraph.Base)>;<simpleCallgraph.A: void callOnConstructor()>;YES;YES
simpleCallgraph.B;<simpleCallgraph.B: void callOnConstructor()>;<simpleCallgraph.A: void callOnConstructor()>;YES;YES
